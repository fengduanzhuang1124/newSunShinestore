{"version":3,"file":"request.js","sources":["utils/request.js"],"sourcesContent":["// 统一请求工具类\r\nconst DEFAULT_BASE_URL = 'http://127.0.0.1:3000';\r\n\r\nclass Request {\r\n  constructor() {\r\n    const savedBaseURL = typeof uni !== 'undefined' ? uni.getStorageSync('BASE_URL') : '';\r\n    this.baseURL = savedBaseURL || DEFAULT_BASE_URL;\r\n    this.loadingCount = 0;\r\n  }\r\n\r\n  // 切换并记忆 BaseURL\r\n  setBaseURL(newBaseURL) {\r\n    if (!newBaseURL || typeof newBaseURL !== 'string') return;\r\n    this.baseURL = newBaseURL;\r\n    if (typeof uni !== 'undefined') {\r\n      uni.setStorageSync('BASE_URL', newBaseURL);\r\n    }\r\n  }\r\n\r\n  getBaseURL() {\r\n    return this.baseURL;\r\n  }\r\n\r\n  // 获取请求头\r\n  getHeaders() {\r\n    const token = uni.getStorageSync('token');\r\n    return {\r\n      'Content-Type': 'application/json',\r\n      ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n    };\r\n  }\r\n\r\n  _show(loadingText) {\r\n    if (this.loadingCount === 0) {\r\n      uni.showLoading({ title: loadingText || '加载中...' });\r\n    }\r\n    this.loadingCount++;\r\n  }\r\n  \r\n  _hide() {\r\n    if (this.loadingCount > 0) this.loadingCount--;\r\n    if (this.loadingCount === 0) {\r\n      uni.hideLoading();\r\n    }\r\n  }\r\n\r\n  // 统一请求方法\r\n  async request(options) {\r\n    const { url, method = 'GET', data, showLoading = true, loadingText = '加载中...' } = options;\r\n    if (showLoading) this._show(loadingText);\r\n    \r\n    try {\r\n      const res = await uni.request({\r\n        url: `${this.baseURL}${url}`,\r\n        method,\r\n        data,\r\n        header: this.getHeaders()\r\n      });\r\n\r\n      const response = res[1] || res;\r\n      \r\n      // 直接返回完整的响应，让调用方处理状态码\r\n      return response;\r\n    } catch (error) {\r\n      console.error('请求错误:', error);\r\n      throw error;\r\n    } finally {\r\n      if (showLoading) {\r\n        this._hide();\r\n      }\r\n    }\r\n  }\r\n\r\n  // GET 请求\r\n  get(url, options = {}) {\r\n    const { params, ...rest } = options;\r\n    let finalUrl = url;\r\n    \r\n    // 处理查询参数\r\n    if (params) {\r\n      const queryString = Object.keys(params)\r\n        .filter(key => params[key] !== undefined && params[key] !== null && params[key] !== '')\r\n        .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`)\r\n        .join('&');\r\n      \r\n      if (queryString) {\r\n        finalUrl = `${url}${url.includes('?') ? '&' : '?'}${queryString}`;\r\n      }\r\n    }\r\n    \r\n    return this.request({ url: finalUrl, method: 'GET', ...rest });\r\n  }\r\n\r\n  // POST 请求\r\n  post(url, data, options = {}) {\r\n    return this.request({ url, method: 'POST', data, ...options });\r\n  }\r\n\r\n  // PUT 请求\r\n  put(url, data, options = {}) {\r\n    return this.request({ url, method: 'PUT', data, ...options });\r\n  }\r\n\r\n  // DELETE 请求\r\n  delete(url, options = {}) {\r\n    return this.request({ url, method: 'DELETE', ...options });\r\n  }\r\n}\r\n\r\n// 创建实例\r\nconst request = new Request();\r\n\r\n// 导出便捷方法\r\nexport const api = {\r\n  // 用户相关\r\n  users: {\r\n    login: (data) => request.post('/api/users/login', data),\r\n    register: (data) => request.post('/api/users/register', data),\r\n    wechatLogin: (data, options={}) => request.post('/api/users/wechat/login', data, options),\r\n    getProfile: () => request.get('/api/users/profile'),\r\n    getAllUsers: () => request.get('/api/users')\r\n  },\r\n  \r\n  // 商品相关\r\n  products: {\r\n    getProducts: (params) => request.get('/api/products', { params }),\r\n    getProduct: (id) => request.get(`/api/products/${id}`),\r\n    getCategories: () => request.get('/api/products/categories'),\r\n    createProduct: (data) => request.post('/api/products', data),\r\n    updateProduct: (id, data) => request.put(`/api/products/${id}`, data),\r\n    deleteProduct: (id) => request.delete(`/api/products/${id}`)\r\n  },\r\n  \r\n  // 购物车相关\r\n  cart: {\r\n    getCart: () => request.get('/api/cart'),\r\n    addToCart: (data) => request.post('/api/cart', data),\r\n    updateCartQuantity: (id, data) => request.put(`/api/cart/${id}`, data),\r\n    removeFromCart: (id) => request.delete(`/api/cart/${id}`),\r\n    clearCart: () => request.delete('/api/cart')\r\n  },\r\n  \r\n  // 订单相关\r\n  orders: {\r\n    getOrders: (params) => request.get('/api/orders', { params }),\r\n    createOrder: (data) => request.post('/api/orders', data),\r\n    getOrderDetail: (id) => request.get(`/api/orders/${id}`),\r\n    updateOrderStatus: (id, data) => request.put(`/api/orders/${id}/status`, data)\r\n  },\r\n  \r\n  // 管理员相关\r\n  admin: {\r\n    getUsers: () => request.get('/api/admin/users'),\r\n    createUser: (data) => request.post('/api/admin/users', data),\r\n    getAllProducts: () => request.get('/api/admin/products/all'),\r\n    getAllOrders: () => request.get('/api/admin/orders'),\r\n    getStats: () => request.get('/api/statistics/system')\r\n  },\r\n  \r\n  // 品牌管理\r\n  brands: {\r\n    getBrands: (params) => request.get('/api/brands', { params }),\r\n    getBrand: (id) => request.get(`/api/brands/${id}`),\r\n    createBrand: (data) => request.post('/api/brands', data),\r\n    updateBrand: (id, data) => request.put(`/api/brands/${id}`, data),\r\n    deleteBrand: (id) => request.delete(`/api/brands/${id}`),\r\n    getBrandStats: (params) => request.get('/api/brands/stats/ranking', { params })\r\n  },\r\n  \r\n  // 统计数据\r\n  statistics: {\r\n    getSystemStats: () => request.get('/api/statistics/system'),\r\n    getHotProducts: (params) => request.get('/api/statistics/hot-products', { params }),\r\n    getHotCategories: (params) => request.get('/api/statistics/hot-categories', { params }),\r\n    getSalesTrend: (params) => request.get('/api/statistics/sales-trend', { params })\r\n  },\r\n  \r\n  // 健康检查\r\n  health: () => request.get('/health'),\r\n\r\n  // 基础地址辅助\r\n  setBaseURL: (url) => request.setBaseURL(url),\r\n  getBaseURL: () => request.getBaseURL()\r\n};\r\n\r\nexport default api;\r\n"],"names":["uni"],"mappings":"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"}