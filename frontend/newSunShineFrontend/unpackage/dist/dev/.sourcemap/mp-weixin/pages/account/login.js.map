{"version":3,"file":"login.js","sources":["pages/account/login.vue","../../../HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvYWNjb3VudC9sb2dpbi52dWU"],"sourcesContent":["<template>\n  <view class=\"login-container\">\n    <view class=\"login-header\">\n      <text class=\"login-title\">用户登录</text>\n    </view>\n    \n    <view class=\"login-form\">\n      <view class=\"form-group\">\n        <text class=\"form-label\">用户名</text>\n        <input \n          type=\"text\" \n          v-model=\"formData.username\" \n          placeholder=\"请输入用户名\" \n          class=\"form-input\"\n        />\n      </view>\n      \n      <view class=\"form-group\">\n        <text class=\"form-label\">密码</text>\n        <input \n          type=\"password\" \n          v-model=\"formData.password\" \n          placeholder=\"请输入密码\" \n          class=\"form-input\"\n        />\n      </view>\n      \n      <button @click=\"wechatLogin\" class=\"login-btn wechat-btn\" :disabled=\"loading\">\n        <text class=\"wechat-icon\">微信</text>\n        {{ loading ? '登录中...' : '微信一键登录' }}\n      </button>\n\n      <view class=\"divider\">\n        <text class=\"divider-text\">或</text>\n      </view>\n\n      <button @click=\"handleLogin\" class=\"login-btn traditional-btn\" :disabled=\"loading\">\n        {{ loading ? '登录中...' : '用户名密码登录' }}\n      </button>\n      \n      <view class=\"register-link\">\n        <text @click=\"goToAdmin\" class=\"link-text\">管理员登录？</text>\n        <text @click=\"goToRegister\" class=\"link-text\">创建管理员账号</text>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      formData: {\n        username: '',\n        password: ''\n      },\n      loading: false\n    };\n  },\n  methods: {\n    validateForm() {\n      if (!this.formData.username.trim()) {\n        uni.showToast({ title: '请输入用户名', icon: 'none' });\n        return false;\n      }\n      \n      if (!this.formData.password) {\n        uni.showToast({ title: '请输入密码', icon: 'none' });\n        return false;\n      }\n      \n      return true;\n    },\n    \n    // 微信一键登录\n    async wechatLogin() {\n      try {\n        uni.showLoading({ title: '登录中...' });\n        \n        // 1. 获取微信授权码\n        const loginRes = await uni.login({ provider: 'weixin' });\n        const code = loginRes[1] ? loginRes[1].code : loginRes.code;\n        if (!code) {\n          throw new Error('获取微信授权码失败');\n        }\n        console.log('获取到微信授权码:', code);\n\n        // 2. 获取用户信息（会弹出授权弹窗）\n        let userInfo = {};\n        try {\n          console.log('开始获取用户信息...');\n          \n          // 先显示一个提示，让用户知道即将弹出授权窗口\n          uni.showModal({\n            title: '授权提示',\n            content: '即将弹出微信授权窗口，请点击\"确定\"获取您的头像和昵称',\n            showCancel: false,\n            success: async (modalRes) => {\n              if (modalRes.confirm) {\n                try {\n                  const profileRes = await uni.getUserProfile({ \n                    desc: '用于完善会员资料' \n                  });\n                  console.log('用户信息获取成功:', profileRes);\n                  \n                  const profile = profileRes[1] || profileRes;\n                  userInfo = {\n                    nickname: profile.userInfo?.nickName,\n                    avatarUrl: profile.userInfo?.avatarUrl,\n                    gender: profile.userInfo?.gender,\n                    country: profile.userInfo?.country,\n                    province: profile.userInfo?.province,\n                    city: profile.userInfo?.city\n                  };\n                  console.log('解析后的用户信息:', userInfo);\n                  \n                  // 继续登录流程\n                  await this.completeWechatLogin(code, userInfo);\n                } catch (profileError) {\n                  console.error('获取用户信息失败:', profileError);\n                  uni.showToast({ title: '获取用户信息失败', icon: 'none' });\n                  // 继续登录流程，但不包含用户信息\n                  await this.completeWechatLogin(code, {});\n                }\n              }\n            }\n          });\n          \n          return; // 等待用户确认后再继续\n          \n        } catch (profileError) {\n          console.error('用户信息授权失败:', profileError);\n          uni.showToast({ title: '用户信息授权失败', icon: 'none' });\n          // 继续登录流程，但不包含用户信息\n          await this.completeWechatLogin(code, {});\n        }\n      } catch (err) {\n        console.error('微信登录失败:', err);\n        uni.showToast({ title: '微信登录失败', icon: 'none' });\n      } finally {\n        uni.hideLoading();\n      }\n    },\n\n    // 完成微信登录流程\n    async completeWechatLogin(code, userInfo) {\n      try {\n        console.log('开始发送登录请求，code:', code, 'userInfo:', userInfo);\n        \n        // 3. 使用封装的API发送到后端进行微信登录\n        const res = await this.$api.users.wechatLogin({ \n          code, \n          ...userInfo \n        }, { loadingText: '登录中...' });\n\n        console.log('后端登录响应:', res);\n\n        if (res.statusCode >= 200 && res.statusCode < 300) {\n          const { token, user } = res.data;\n          \n          console.log('登录成功，用户信息:', user);\n          \n          // 保存登录信息\n          uni.setStorageSync('token', token);\n          uni.setStorageSync('userInfo', user);\n          \n          uni.showToast({ title: '登录成功', icon: 'success' });\n          \n          // 根据用户角色跳转\n          setTimeout(() => {\n            if (user.role === 'admin') {\n              // 管理员用户提示使用网页版管理后台\n              uni.showModal({\n                title: '管理员登录',\n                content: '管理员请使用网页版管理后台：http://localhost:3000/admin',\n                showCancel: false,\n                confirmText: '知道了'\n              });\n            } else {\n              uni.switchTab({ url: '/pages/home/index' });\n            }\n          }, 1000);\n        } else {\n          const msg = res?.data?.error || '登录失败';\n          console.error('登录失败:', msg);\n          uni.showToast({ title: msg, icon: 'none' });\n        }\n      } catch (err) {\n        console.error('完成登录流程失败:', err);\n        uni.showToast({ title: '登录失败', icon: 'none' });\n      }\n    },\n\n    async handleLogin() {\n      if (!this.validateForm()) {\n        return;\n      }\n      \n      this.loading = true;\n      \n      try {\n        // const res = await uni.request({\n        //   url: 'http://192.168.1.17:3000/api/users/login',\n        //   method: 'POST',\n        //   header: {\n        //     'Content-Type': 'application/json'\n        //   },\n        //   data: {\n        //     username: this.formData.username,\n        //     password: this.formData.password\n        //   }\n        // });\n        const res = await this.$api.users.login({ username: this.formData.username, password: this.formData.password })\n        \n        console.log('登录响应:', res);\n        \n        // 检查响应结构\n        const response = res[1] || res;\n        console.log('处理后的响应:', response);\n        \n        if (response && response.statusCode === 200) {\n          const { token, user } = response.data;\n          \n          console.log('登录成功，用户信息:', user);\n          \n          // 保存token和用户信息\n          uni.setStorageSync('token', token);\n          uni.setStorageSync('userInfo', user);\n          \n          console.log('已保存到本地存储，token:', token);\n          console.log('已保存到本地存储，userInfo:', user);\n          \n          uni.showToast({ title: '登录成功', icon: 'success' });\n          \n          // 根据用户角色跳转到不同页面\n          setTimeout(() => {\n            if (user.role === 'admin') {\n              // 管理员用户提示使用网页版管理后台\n              uni.showModal({\n                title: '管理员登录',\n                content: '管理员请使用网页版管理后台：http://localhost:3000/admin',\n                showCancel: false,\n                confirmText: '知道了'\n              });\n            } else {\n              uni.switchTab({\n                url: '/pages/home/index'\n              });\n            }\n          }, 1500);\n        } else {\n          const errorMsg = response && response.data && response.data.error ? response.data.error : '登录失败';\n          uni.showToast({ \n            title: errorMsg, \n            icon: 'none' \n          });\n        }\n      } catch (error) {\n        console.error('登录失败:', error);\n        uni.showToast({ title: '网络错误，请重试', icon: 'none' });\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    goToRegister() {\n      uni.navigateTo({\n        url: '/pages/account/register'\n      });\n    },\n    goToAdmin() {\n      // 提示管理员使用网页版管理后台\n      uni.showModal({\n        title: '管理后台',\n        content: '请使用网页版管理后台：http://localhost:3000/admin',\n        showCancel: false,\n        confirmText: '知道了'\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.login-container {\n  padding: 40rpx;\n  min-height: 100vh;\n  background-color: #f5f5f5;\n}\n\n.login-header {\n  text-align: center;\n  margin-bottom: 60rpx;\n}\n\n.login-title {\n  font-size: 48rpx;\n  font-weight: bold;\n  color: #333;\n}\n\n.login-form {\n  background: white;\n  border-radius: 20rpx;\n  padding: 40rpx;\n  box-shadow: 0 4rpx 20rpx rgba(0,0,0,0.1);\n}\n\n.form-group {\n  margin-bottom: 40rpx;\n}\n\n.form-label {\n  display: block;\n  font-size: 28rpx;\n  color: #333;\n  margin-bottom: 20rpx;\n  font-weight: 500;\n}\n\n.form-input {\n  width: 100%;\n  height: 80rpx;\n  border: 2rpx solid #e0e0e0;\n  border-radius: 10rpx;\n  padding: 0 20rpx;\n  font-size: 28rpx;\n  background-color: #fafafa;\n}\n\n.form-input:focus {\n  border-color: #3cc51f;\n  background-color: white;\n}\n\n.login-btn {\n  width: 100%;\n  height: 88rpx;\n  color: white;\n  border: none;\n  border-radius: 10rpx;\n  font-size: 32rpx;\n  font-weight: bold;\n  margin-top: 40rpx;\n}\n\n.wechat-btn {\n  background: #07c160;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.wechat-icon {\n  margin-right: 10rpx;\n  font-weight: bold;\n}\n\n.traditional-btn {\n  background: #3cc51f;\n}\n\n.divider {\n  text-align: center;\n  margin: 30rpx 0;\n  position: relative;\n}\n\n.divider::before {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 0;\n  right: 0;\n  height: 1rpx;\n  background: #e0e0e0;\n}\n\n.divider-text {\n  background: white;\n  padding: 0 20rpx;\n  color: #999;\n  font-size: 24rpx;\n}\n\n.login-btn[disabled] {\n  background: #ccc;\n}\n\n.register-link {\n  text-align: center;\n  margin-top: 40rpx;\n  font-size: 28rpx;\n  color: #666;\n}\n\n.link-text {\n  color: #3cc51f;\n  margin-left: 10rpx;\n}\n</style> ","import MiniProgramPage from 'D:/newSunShinestore/frontend/newSunShineFrontend/pages/account/login.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni"],"mappings":"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"}